"""Initial migration

Revision ID: 120ee4aba0b3
Revises: 
Create Date: 2025-09-15 20:52:41.603385

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '120ee4aba0b3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('first_name', sa.String(length=64), nullable=True),
    sa.Column('last_name', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_phone'), ['phone'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('availability',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('week_start_date', sa.Date(), nullable=False),
    sa.Column('availability_data', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'week_start_date', name='unique_user_week')
    )
    with op.batch_alter_table('availability', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_availability_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_availability_updated_at'), ['updated_at'], unique=False)

    op.create_table('friend',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('friend_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['friend_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'friend_id', name='unique_friendship')
    )
    with op.batch_alter_table('friend', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_friend_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_friend_updated_at'), ['updated_at'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('friend', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_friend_updated_at'))
        batch_op.drop_index(batch_op.f('ix_friend_created_at'))

    op.drop_table('friend')
    with op.batch_alter_table('availability', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_availability_updated_at'))
        batch_op.drop_index(batch_op.f('ix_availability_created_at'))

    op.drop_table('availability')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_phone'))
        batch_op.drop_index(batch_op.f('ix_user_email'))
        batch_op.drop_index(batch_op.f('ix_user_created_at'))

    op.drop_table('user')
    # ### end Alembic commands ###
